datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model Petani {
  petaniID          Int            @id @default(autoincrement())
  nama_petani       String
  provinsi         String?
  kota             String?
  kecamatan        String?
  kode_pos         String?
  detail_alamat    String?
  nama_alamat      String?
  no_telepon_petani String
  email_petani      String         @unique
  password_petani   String
  image_petani      String?
  tanggal_lahir     DateTime?
  deskripsi         String?
  Produk            PetaniProduk[]
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model Pembeli {
  pembeliID        Int               @id @default(autoincrement())
  nama_pembeli     String
  email_pembeli    String            @unique
  password_pembeli String
  kontak_pembeli   String
  provinsi         String?
  kota             String?
  kecamatan        String?
  kode_pos         String?
  detail_alamat    String?
  nama_alamat      String?
  tanggal_lahir    DateTime?
  image_pembeli    String?
  deskripsi        String?
  WishlistProduk   WishlistProduk[]
  Keranjang        Keranjang?
  Transaksi        Transaksi[]
  PembeliProduk    PembeliProduk[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model WishlistProduk {
  wishlistID Int             @id @default(autoincrement())
  pembeliID  Int
  produkID   Int
  Pembeli    Pembeli         @relation(fields: [pembeliID], references: [pembeliID], onDelete: Cascade)
  Produk     Produk          @relation(fields: [produkID], references: [produkID], onDelete: Cascade)
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt

  @@unique([pembeliID, produkID])
}

model Keranjang {
  keranjangID    Int              @id @default(autoincrement())
  pembeliID      Int              @unique  
  Pembeli        Pembeli          @relation(fields: [pembeliID], references: [pembeliID])
  KeranjangProduk KeranjangProduk[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model Transaksi {
  no_transaksi      String                @id
  tanggal_transaksi DateTime
  status_transaksi  String
  total_harga       Float
  metode_pembayaran String
  pembeliID         Int
  Pembeli           Pembeli            @relation(fields: [pembeliID], references: [pembeliID])
  TransaksiProduk   TransaksiProduk[]
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
}

model Produk {
  produkID         Int               @id @default(autoincrement())
  deskripsi_produk String
  harga            Float
  jumlah_stok      Int
  jumlah_produk    Int?              @default(1)
  berat_produk     Int?              @default(20)
  nama_produk      String
  image_produk     String[]
  TransaksiProduk  TransaksiProduk[]
  PembeliProduk    PembeliProduk[]
  PetaniProduk     PetaniProduk[]
  WishlistProduk   WishlistProduk[]
  KeranjangProduk  KeranjangProduk[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model TransaksiProduk {
  transaksiID  String
  produkID     Int
  Produk       Produk    @relation(fields: [produkID], references: [produkID], onDelete: Cascade)
  Transaksi    Transaksi @relation(fields: [transaksiID], references: [no_transaksi])

  @@id([transaksiID, produkID])
}

model PetaniProduk {
  petaniID Int
  produkID Int
  Petani   Petani @relation(fields: [petaniID], references: [petaniID])
  Produk   Produk @relation(fields: [produkID], references: [produkID], onDelete: Cascade)

  @@id([petaniID, produkID])
}

model PembeliProduk {
  pembeliID Int
  produkID  Int
  Pembeli   Pembeli @relation(fields: [pembeliID], references: [pembeliID])
  Produk    Produk  @relation(fields: [produkID], references: [produkID], onDelete: Cascade)

  @@id([pembeliID, produkID])
}

model KeranjangProduk {
  keranjangID        Int
  produkID           Int
  jumlah             Int
  total_harga_produk Int
  Produk             Produk    @relation(fields: [produkID], references: [produkID], onDelete: Cascade)
  Keranjang          Keranjang @relation(fields: [keranjangID], references: [keranjangID], onDelete: Cascade)

  @@id([keranjangID, produkID])
}
